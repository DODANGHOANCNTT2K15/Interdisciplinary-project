<template>
  <div class="d-flex flex-column min-vh-100">
    <main class="flex-grow-1 container mt-5">
      <div class="text-center mb-4">
        <h3 class="page-header text-primary fw-bold">Thi thử</h3>
        <p class="text-muted">Danh sách các bài thi thử, hãy chọn bài thi để bắt đầu!</p>
      </div>

      <!-- Bộ lọc -->
      <div class="d-flex justify-content-center mb-4 row">
        <div class="form-group me-2 col-sm-5">
          <select class="form-control" v-model="levelFilter">
            <option value="">Tất cả cấp độ</option>
            <option :value="350">Beginner: dưới 350 điểm</option>
            <option :value="550">Elementary: 350 – 550 điểm</option>
            <option :value="750">Pre-Intermediate: 550 – 750 điểm</option>
            <option :value="900">Intermediate: 750 – 900 điểm</option>
            <option :value="955">Upper-Intermediate: 900 – 955 điểm</option>
            <option :value="990">Advanced: 955 – 990 điểm</option>
          </select>
        </div>
        <button class="btn btn-primary col-sm-2" @click="applyFilters">Duyệt</button>
      </div>

      <!-- Trạng thái đang tải -->
      <div v-if="isLoading" class="text-center">
        <p>Đang tải danh sách bài thi...</p>
      </div>

      <!-- Thông báo lỗi -->
      <div v-if="errorMessage && !isLoading" class="alert alert-danger text-center mt-3">
        {{ errorMessage }}
      </div>

      <!-- Danh sách các bài thi -->
      <div v-if="!isLoading && practiceTestList.length > 0" class="row mt-4">
        <div
            v-for="(practicetest) in practiceTestList"
            :key="practicetest.practicetestid"
            class="col-12 d-flex justify-content-center align-items-center mb-3"
        >
          <div class="card shadow-sm d-flex flex-row align-items-center" style="width: 100%; max-width: 800px;">
            <img :src="practicetest.practicetestimage" alt="Grammar Image" class="card-img-left" />
            <div class="card-body text-start">
              <h5 class="card-title text-primary fw-bold">{{ practicetest.practicetestname }}</h5>
              <p class="card-text text-muted">Cấp độ: {{ practicetest.practicetestlevel }}</p>
              <h5 class="card-title text-muted">Thời gian: 30 phút</h5>
              <button
                  class="btn btn-primary"
                  @click="$router.push({ name: 'PracticeTestToeic', params: { id: practicetest.practicetestid } })"
              >
                Bắt đầu thi
              </button>
            </div>
          </div>
        </div>
      </div>

      <!-- Thông báo không tìm thấy bài thi -->
      <div v-if="!isLoading && practiceTestList.length === 0" class="text-center mt-4">
        <p>Không tìm thấy bài thi nào phù hợp.</p>
      </div>
    </main>
  </div>
</template>
<script setup>
import { ref, onMounted } from "vue";
import axios from "axios";

// Biến trạng thái
const originalPracticeTestList = ref([]); // Dữ liệu gốc từ API
const practiceTestList = ref([]); // Danh sách bài thi hiển thị
const errorMessage = ref(""); // Thông báo lỗi
const isLoading = ref(false); // Trạng thái đang tải dữ liệu
const levelFilter = ref(""); // Bộ lọc cấp độ

// Hàm tải dữ liệu từ API
const loadPracticeTests = async () => {
  isLoading.value = true; // Bắt đầu tải dữ liệu
  errorMessage.value = ""; // Xóa thông báo lỗi cũ

  try {
    const response = await axios.get("http://localhost:8080/api/admin/practicetest/loadpracticetest");

    if (response.data && response.data.length > 0) {
      // Lưu dữ liệu ban đầu
      originalPracticeTestList.value = response.data.map((test) => ({
        practicetestid: test.practicetestid,
        practicetestname: test.practicetestname,
        practicetestlevel: test.practicetestlevel,
        practicetestimage: `http://localhost:8080${test.practicetestimage}`,
      }));

      // Hiển thị toàn bộ danh sách ban đầu
      practiceTestList.value = [...originalPracticeTestList.value];
    } else {
      errorMessage.value = "Không có bài thi thử nào.";
    }
  } catch (error) {
    console.error("Lỗi khi tải danh sách bài thi thử:", error);
    errorMessage.value = "Không thể tải danh sách bài thi thử. Vui lòng thử lại sau.";
  } finally {
    isLoading.value = false; // Kết thúc tải
  }
};

// Hàm áp dụng bộ lọc
const applyFilters = () => {
  if (levelFilter.value) {
    // Lọc danh sách dựa trên cấp độ
    practiceTestList.value = originalPracticeTestList.value.filter(
        (test) => test.practicetestlevel === parseInt(levelFilter.value)
    );
  } else {
    // Hiển thị lại toàn bộ danh sách
    practiceTestList.value = [...originalPracticeTestList.value];
  }
};

// Tải dữ liệu khi khởi tạo
onMounted(() => {
  loadPracticeTests();
});
</script>
<style scoped>
/* Container */
.container {
  max-width: 800px;
  margin: auto;
}

/* Card */
.card {
  display: flex;
  flex-direction: row;
  align-items: center;
  border: none;
  border-radius: 10px;
  transition: transform 0.2s ease-in-out, box-shadow 0.3s ease-in-out;
  padding: 10px;
  gap: 20px;
}

.card:hover {
  transform: translateY(-5px);
  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);
}

.card-img-left {
  width: 150px;
  height: 150px;
  object-fit: cover;
  border-radius: 10px;
  flex-shrink: 0;
}

.card-body {
  flex: 1;
}

.card-title {
  font-size: 18px;
  font-weight: bold;
  margin-bottom: 10px;
}

.card-text {
  font-size: 14px;
  color: #6c757d;
  margin-bottom: 15px;
}

/* Button */
.btn {
  font-size: 14px;
  font-weight: bold;
  padding: 10px;
  border-radius: 8px;
  transition: background-color 0.3s ease-in-out, color 0.3s ease-in-out;
}

.btn-primary {
  background-color: #007bff;
  border: none;
}

.btn-primary:hover {
  background-color: #0056b3;
}

/* Alert */
.alert {
  font-size: 16px;
  font-weight: bold;
  border-radius: 8px;
}

.alert-danger {
  background-color: #f8d7da;
  color: #842029;
  border: 1px solid #f5c2c7;
}
</style>
